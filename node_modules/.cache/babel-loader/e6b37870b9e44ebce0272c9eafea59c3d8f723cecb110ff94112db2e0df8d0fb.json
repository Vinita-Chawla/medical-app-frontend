{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Practice\\\\my-app\\\\src\\\\Components\\\\PropsEx.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PropsEx(props) {\n  _s();\n  useEffect(() => {\n    console.log(\"useEffect for data and count as props\");\n  }, [props.data, props.count]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hello \", props.count, \" \", props.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(PropsEx, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PropsEx;\nexport default PropsEx;\nvar _c;\n$RefreshReg$(_c, \"PropsEx\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PropsEx","props","_s","console","log","data","count","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Practice/my-app/src/Components/PropsEx.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nfunction PropsEx(props){\r\n    useEffect(()=>{\r\n        console.log(\"useEffect for data and count as props\")\r\n    },[props.data, props.count])\r\n    return(\r\n        <>\r\n            <h1>hello {props.count} {props.data}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PropsEx;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACzC,SAASC,OAAOA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACnBP,SAAS,CAAC,MAAI;IACVQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;EACxD,CAAC,EAAC,CAACH,KAAK,CAACI,IAAI,EAAEJ,KAAK,CAACK,KAAK,CAAC,CAAC;EAC5B,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACIV,OAAA;MAAAU,QAAA,GAAI,QAAM,EAACN,KAAK,CAACK,KAAK,EAAC,GAAC,EAACL,KAAK,CAACI,IAAI;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAC3C,CAAC;AAEX;AAACT,EAAA,CATQF,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAYhB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}