{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Practice\\\\my-app\\\\src\\\\App.jsx\";\n//  React Functional Components\n/*\r\nimport React from \"react\";\r\nimport Heading from \"./Components/Heading\";\r\nimport {Para} from \"./Components/Para\";\r\nimport OrderedList from \"./Components/OrderedList\";\r\n\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <Heading/>\r\n        <Para/>\r\n         <OrderedList/>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// React class components\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Create class component within same file\n// To create the class component we use key word class, extends from component, and must use render() methid and then return\n/*\r\nimport React,{Component} from \"react\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n\r\nclass User extends Component{\r\n    render(){\r\n        return(\r\n            <h1> hello...</h1>\r\n        )\r\n    }\r\n}\r\n*/\n\n// Component within component but we can use only that component not outside it and there are twe ways.\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    function Other(){\r\n        return(\r\n            <><h1>Vanita Chawla</h1></>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        <User/>\r\n        <Other/>\r\n        {Other()}\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Can we write the code without jsx and just using js. yes :) , here is example of only one div\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,\"Hello this is my first div with out jsx\");\r\n    \r\n\r\n}\r\n*/\n\n// Now example of child inside div\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Hello this is my first div with out jsx\"));\r\n    \r\n\r\n}\r\n*/\n\n// Click event and function in ReactJs \n// Problem here is that if i click on button and my data variables changes but it shows first value not updated value why? here we use stats to change the state.\n// The reason why the data is not re-rendered onto the screen is because of functional components being stateless components. Stateless components cannot change their state during the runtime of the app, which means the components cannot be redrawn while the app is in action. If we console.log the data just after clicking the button by putting the {console.log(data)}, we will get the updated value of that data but we cannot see the updated value on the screen because the state is internally changed but the component did not render again due to its stateless nature.\n/*\r\nimport React from \"react\";\r\nfunction App(){\r\nlet data = \"Vanita chawla\"\r\n    function myfunc(){\r\n        data = \"Vini chawla\"\r\n        alert(\"function clicked!\")\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <h1>{data}</h1>\r\n        <button onClick={myfunc}>Click me</button>\r\n        <button onClick={()=> alert(\"hi\")}>click me</button>\r\n        <button onClick={()=> myfunc()}>click me</button>\r\n      </>\r\n    )\r\n}\r\n*/\n\n//  State with functional component\n// State is object in which we store the data\n// As in above example when we use variable then component not update with click.\n// We use state to update the component, when we click on btn state changes then component updated because it understand state is changed.\n// When we use state then it again re-render the the jsx part/functional component when state changes\n// Usestate is hook to update the state.\n/*\r\nimport React,{useState} from \"react\";\r\nconst App=()=>{\r\n    const [data,setData] = useState(\"Vanita\");\r\n    const [count, setCount] = useState(0)\r\n    function updateData(){\r\n        setData(\"Chawla\");\r\n        setCount(count + 1);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>{data}</h1>\r\n            <p>{count}</p>\r\n            <button onClick={updateData}>Click me</button>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// State with class component (we cannot use useState here)\n// to use the state in class component i make a app component with class component not functional \n// In class component we use state for this we have to follow these steps\n// i) create constructor\n// ii) call parent constructor for this we use super();\n// iii) create state by using this\n// To make the function no need to use function keyword and call this function by using arrow function and this variable (e.g. ()=> this.updateData())\n// To update the state we write like this e.g. this.setState({data:\"chawla\"})\n// To display the data we write this.state.data\n// We cannot use state outside the component\n// State is public\n\n// for name update\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:\"Vanita\"\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:\"chawla\"\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <p>0</p>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\n\n// for counter\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:0\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:this.state.data + 1\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\n\n// Props with functional component\n// props arelike parameter we create component and send data to that component with helps of props or we can say send props to that component\n// We can only update the state here means in parent component not in child component (Student)\n/*\r\nimport React, { useState } from \"react\";\r\nimport Student from \"./Components/Student\";\r\n\r\nconst App=()=>{\r\n    let heading={\r\n        display:\"flex\",\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        gap:\"1rem\",\r\n        marginTop:\"1rem\"\r\n    }\r\n\r\n    const [name,setName] = useState(\"Vinita Chawla\");\r\n\r\n\r\n    function Apple(){\r\n        alert(\"Hello\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div style={heading}>\r\n            <h1>React props</h1>\r\n            <Student name={name} email=\"vini@gmail.com\" func={Apple} other={{address:\"Ghotki\", role:\"Student\"}}/>\r\n        <button onClick={()=> setName(\"Vanita Chawla\")}>Update name</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n*/\n\n// Props in class component\nimport React, { Component } from \"react\";\nimport ClassStudent from \"./Components/ClassStudent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"Vanita Chawla\"\n    };\n  }\n  render() {\n    let heading = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"1rem\",\n      marginTop: \"1rem\"\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: heading,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React props\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ClassStudent, {\n          name: this.state.name,\n          email: \"vini@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.updateName(),\n          children: \"Update name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ClassStudent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","state","name","render","heading","display","flexDirection","justifyContent","alignItems","gap","marginTop","children","style","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","updateName"],"sources":["D:/React Practice/my-app/src/App.jsx"],"sourcesContent":["//  React Functional Components\r\n/*\r\nimport React from \"react\";\r\nimport Heading from \"./Components/Heading\";\r\nimport {Para} from \"./Components/Para\";\r\nimport OrderedList from \"./Components/OrderedList\";\r\n\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <Heading/>\r\n        <Para/>\r\n         <OrderedList/>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// React class components\r\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Create class component within same file\r\n// To create the class component we use key word class, extends from component, and must use render() methid and then return\r\n/*\r\nimport React,{Component} from \"react\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n\r\nclass User extends Component{\r\n    render(){\r\n        return(\r\n            <h1> hello...</h1>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n\r\n// Component within component but we can use only that component not outside it and there are twe ways.\r\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    function Other(){\r\n        return(\r\n            <><h1>Vanita Chawla</h1></>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        <User/>\r\n        <Other/>\r\n        {Other()}\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Can we write the code without jsx and just using js. yes :) , here is example of only one div\r\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,\"Hello this is my first div with out jsx\");\r\n    \r\n\r\n}\r\n*/\r\n\r\n// Now example of child inside div\r\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Hello this is my first div with out jsx\"));\r\n    \r\n\r\n}\r\n*/\r\n\r\n\r\n// Click event and function in ReactJs \r\n// Problem here is that if i click on button and my data variables changes but it shows first value not updated value why? here we use stats to change the state.\r\n// The reason why the data is not re-rendered onto the screen is because of functional components being stateless components. Stateless components cannot change their state during the runtime of the app, which means the components cannot be redrawn while the app is in action. If we console.log the data just after clicking the button by putting the {console.log(data)}, we will get the updated value of that data but we cannot see the updated value on the screen because the state is internally changed but the component did not render again due to its stateless nature.\r\n/*\r\nimport React from \"react\";\r\nfunction App(){\r\nlet data = \"Vanita chawla\"\r\n    function myfunc(){\r\n        data = \"Vini chawla\"\r\n        alert(\"function clicked!\")\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <h1>{data}</h1>\r\n        <button onClick={myfunc}>Click me</button>\r\n        <button onClick={()=> alert(\"hi\")}>click me</button>\r\n        <button onClick={()=> myfunc()}>click me</button>\r\n      </>\r\n    )\r\n}\r\n*/\r\n\r\n//  State with functional component\r\n// State is object in which we store the data\r\n// As in above example when we use variable then component not update with click.\r\n// We use state to update the component, when we click on btn state changes then component updated because it understand state is changed.\r\n// When we use state then it again re-render the the jsx part/functional component when state changes\r\n// Usestate is hook to update the state.\r\n/*\r\nimport React,{useState} from \"react\";\r\nconst App=()=>{\r\n    const [data,setData] = useState(\"Vanita\");\r\n    const [count, setCount] = useState(0)\r\n    function updateData(){\r\n        setData(\"Chawla\");\r\n        setCount(count + 1);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>{data}</h1>\r\n            <p>{count}</p>\r\n            <button onClick={updateData}>Click me</button>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// State with class component (we cannot use useState here)\r\n// to use the state in class component i make a app component with class component not functional \r\n// In class component we use state for this we have to follow these steps\r\n// i) create constructor\r\n// ii) call parent constructor for this we use super();\r\n// iii) create state by using this\r\n// To make the function no need to use function keyword and call this function by using arrow function and this variable (e.g. ()=> this.updateData())\r\n// To update the state we write like this e.g. this.setState({data:\"chawla\"})\r\n// To display the data we write this.state.data\r\n// We cannot use state outside the component\r\n// State is public\r\n\r\n// for name update\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:\"Vanita\"\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:\"chawla\"\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <p>0</p>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n// for counter\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:0\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:this.state.data + 1\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n// Props with functional component\r\n// props arelike parameter we create component and send data to that component with helps of props or we can say send props to that component\r\n// We can only update the state here means in parent component not in child component (Student)\r\n/*\r\nimport React, { useState } from \"react\";\r\nimport Student from \"./Components/Student\";\r\n\r\nconst App=()=>{\r\n    let heading={\r\n        display:\"flex\",\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        gap:\"1rem\",\r\n        marginTop:\"1rem\"\r\n    }\r\n\r\n    const [name,setName] = useState(\"Vinita Chawla\");\r\n\r\n\r\n    function Apple(){\r\n        alert(\"Hello\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div style={heading}>\r\n            <h1>React props</h1>\r\n            <Student name={name} email=\"vini@gmail.com\" func={Apple} other={{address:\"Ghotki\", role:\"Student\"}}/>\r\n        <button onClick={()=> setName(\"Vanita Chawla\")}>Update name</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n*/\r\n\r\n// Props in class component\r\nimport React, { Component} from \"react\";\r\nimport ClassStudent from \"./Components/ClassStudent\";\r\n\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name:\"Vanita Chawla\"\r\n        }\r\n    }\r\n \r\n    render(){\r\n        let heading={\r\n            display:\"flex\",\r\n            flexDirection : \"column\",\r\n            justifyContent : \"center\",\r\n            alignItems : \"center\",\r\n            gap:\"1rem\",\r\n            marginTop:\"1rem\"\r\n        }\r\n    \r\n        \r\n        return(\r\n            <>\r\n            <div style={heading}>\r\n                <h1>React props</h1>\r\n                <ClassStudent name={this.state.name} email=\"vini@gmail.com\"/>\r\n                {/* <button onClick={()=> this.setState({name:\"vini\"})}>Update name</button> */}\r\n                <button onClick={()=> this.updateName()}>Update name</button> \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,GAAG,SAASN,SAAS;EAEvBO,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAC;IACT,CAAC;EACL;EAEAC,MAAMA,CAAA,EAAE;IACJ,IAAIC,OAAO,GAAC;MACRC,OAAO,EAAC,MAAM;MACdC,aAAa,EAAG,QAAQ;MACxBC,cAAc,EAAG,QAAQ;MACzBC,UAAU,EAAG,QAAQ;MACrBC,GAAG,EAAC,MAAM;MACVC,SAAS,EAAC;IACd,CAAC;IAGD,oBACId,OAAA,CAAAE,SAAA;MAAAa,QAAA,eACAf,OAAA;QAAKgB,KAAK,EAAER,OAAQ;QAAAO,QAAA,gBAChBf,OAAA;UAAAe,QAAA,EAAI;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBpB,OAAA,CAACF,YAAY;UAACQ,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;UAACe,KAAK,EAAC;QAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE7DpB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAK,IAAI,CAACC,UAAU,CAAC,CAAE;UAAAR,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC,gBACJ,CAAC;EAEX;AAEJ;AAGA,eAAejB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}