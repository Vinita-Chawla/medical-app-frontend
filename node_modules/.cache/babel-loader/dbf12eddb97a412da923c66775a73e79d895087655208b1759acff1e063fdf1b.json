{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Practice\\\\my-app\\\\src\\\\App.jsx\";\n//  React Functional Components\n/*\r\nimport React from \"react\";\r\nimport Heading from \"./Components/Heading\";\r\nimport {Para} from \"./Components/Para\";\r\nimport OrderedList from \"./Components/OrderedList\";\r\n\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <Heading/>\r\n        <Para/>\r\n         <OrderedList/>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// React class components\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Create class component within same file\n// To create the class component we use key word class, extends from component, and must use render() methid and then return\n/*\r\nimport React,{Component} from \"react\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n\r\nclass User extends Component{\r\n    render(){\r\n        return(\r\n            <h1> hello...</h1>\r\n        )\r\n    }\r\n}\r\n*/\n\n// Component within component but we can use only that component not outside it and there are twe ways.\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    function Other(){\r\n        return(\r\n            <><h1>Vanita Chawla</h1></>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        <User/>\r\n        <Other/>\r\n        {Other()}\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Can we write the code without jsx and just using js. yes :) , here is example of only one div\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,\"Hello this is my first div with out jsx\");\r\n    \r\n\r\n}\r\n*/\n\n// Now example of child inside div\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Hello this is my first div with out jsx\"));\r\n    \r\n\r\n}\r\n*/\n\n// Click event and function in ReactJs\n// Problem here is that if i click on button and my data variables changes but it shows first value not updated value why? here we use stats to change the state.\n// The reason why the data is not re-rendered onto the screen is because of functional components being stateless components. Stateless components cannot change their state during the runtime of the app, which means the components cannot be redrawn while the app is in action. If we console.log the data just after clicking the button by putting the {console.log(data)}, we will get the updated value of that data but we cannot see the updated value on the screen because the state is internally changed but the component did not render again due to its stateless nature.\n/*\r\nimport React from \"react\";\r\nfunction App(){\r\nlet data = \"Vanita chawla\"\r\n    function myfunc(){\r\n        data = \"Vini chawla\"\r\n        alert(\"function clicked!\")\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <h1>{data}</h1>\r\n        <button onClick={myfunc}>Click me</button>\r\n        <button onClick={()=> alert(\"hi\")}>click me</button>\r\n        <button onClick={()=> myfunc()}>click me</button>\r\n      </>\r\n    )\r\n}\r\n*/\n\n//  State with functional component\n// State is object in which we store the data\n// As in above example when we use variable then component not update with click.\n// We use state to update the component, when we click on btn state changes then component updated because it understand state is changed.\n// When we use state then it again re-render the the jsx part/functional component when state changes\n// Usestate is hook to update the state.\n/*\r\nimport React,{useState} from \"react\";\r\nconst App=()=>{\r\n    const [data,setData] = useState(\"Vanita\");\r\n    const [count, setCount] = useState(0)\r\n    function updateData(){\r\n        setData(\"Chawla\");\r\n        setCount(count + 1);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>{data}</h1>\r\n            <p>{count}</p>\r\n            <button onClick={updateData}>Click me</button>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// State with class component (we cannot use useState here)\n// to use the state in class component i make a app component with class component not functional\n// In class component we use state for this we have to follow these steps\n// i) create constructor\n// ii) call parent constructor for this we use super();\n// iii) create state by using this\n// To make the function no need to use function keyword and call this function by using arrow function and this variable (e.g. ()=> this.updateData())\n// To update the state we write like this e.g. this.setState({data:\"chawla\"})\n// To display the data we write this.state.data\n// We cannot use state outside the component\n// State is public\n\n// for name update\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:\"Vanita\"\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:\"chawla\"\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <p>0</p>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\n\n// for counter\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:0\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:this.state.data + 1\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\n\n// Props with functional component\n// props arelike parameter we create component and send data to that component with helps of props or we can say send props to that component\n// We can only update the state here means in parent component not in child component (Student)\n// pass functions and html also\n/*\r\nimport React, { useState } from \"react\";\r\nimport Student from \"./Components/Student\";\r\n\r\nconst App=()=>{\r\n\r\n    let heading={\r\n        display:\"flex\",\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        gap:\"1rem\",\r\n        marginTop:\"1rem\"\r\n    }\r\n\r\n    const [name,setName] = useState(\"Vinita Chawla\");\r\n\r\n\r\n    function Apple(){\r\n        alert(\"Hello\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div style={heading}>\r\n            <h1>React props</h1>\r\n            <Student name={name} email={\"vini@gmail.com\"} func={Apple} other={{address:\"Ghotki\", role:\"Student\"}}\r\n                html= {<h1>This is HTML heading</h1>}\r\n            />\r\n        <button onClick={()=> setName(\"Vanita Chawla\")}>Update name</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Props in class component (Both ways 1-change state directly  2- change with function)\n/*\r\nimport React, { Component} from \"react\";\r\nimport ClassStudent from \"./Components/ClassStudent\";\r\n\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name:\"Vanita Chawla\"\r\n        }\r\n    }\r\n \r\n    updateName(){\r\n        this.setState({name:\"Vini\"})\r\n    }\r\n\r\n    render(){\r\n        let heading={\r\n            display:\"flex\",\r\n            flexDirection : \"column\",\r\n            justifyContent : \"center\",\r\n            alignItems : \"center\",\r\n            gap:\"1rem\",\r\n            marginTop:\"1rem\"\r\n        }\r\n    \r\n        \r\n        return(\r\n            <>\r\n            <div style={heading}>\r\n                <h1>React props</h1>\r\n                <ClassStudent name={this.state.name} email=\"vini@gmail.com\"/>\r\n                <button onClick={()=> this.setState({name:\"vinita\"})}>Update name1</button>\r\n                <button onClick={()=> this.updateName()}>Update name2</button> \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\n\n// Get Input box value by changing the input or click on btn and then get value\n// One method\n/*\r\nimport React, { useState } from \"react\";\r\nconst App = ()=>{\r\n    const [data,setData] = useState(null);\r\n    const [value ,setValue] = useState(null);\r\n\r\n    function getValue(val){\r\n        console.log(val.target.value);\r\n        setData(val.target.value)\r\n    }\r\n\r\n    function btnClicked(){\r\n        alert(\"clicked\")\r\n        setValue(data);\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>Input Box value</h1>\r\n            <h1>With input change: {data}</h1>\r\n            <h1>With button click: {value}</h1>\r\n            <input type=\"text\" onChange={getValue}/>\r\n            <button onClick={btnClicked}>click me</button>\r\n\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Other method\n// When typing hide value by writing this statemenet setValue(false);\n/*\r\nimport React, { useState } from \"react\";\r\nconst App = ()=>{\r\n    const [data,setData] = useState(null);\r\n    const [value ,setValue] = useState(false);\r\n\r\n    function getValue(val){\r\n        console.log(val.target.value);\r\n        setData(val.target.value);\r\n        setValue(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>Input Box value</h1>\r\n            {value ? <h1>{data}</h1> : null}\r\n            <input type=\"text\" onChange={getValue}/>\r\n            <button onClick={()=>setValue(true)}>click me</button>\r\n\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Hide , Show and Toggle in ReactJs\n/*\r\nimport React, { useState } from \"react\";\r\nconst App = ()=>{\r\n    const [status, setStatus] = useState(true)\r\n    return(\r\n        <>\r\n           {status ? <h1>Hello Vanita!</h1> : null} \r\n            <button onClick={()=> setStatus(false)}>Hide</button>\r\n            <button onClick={()=> setStatus(true)}>Show</button>\r\n            <button onClick={()=> setStatus(!status)}>toggle</button>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Handle Form | checkbox | input field | select\n/*\r\nimport React, { useState } from \"react\";\r\n\r\nconst App=()=>{\r\n    const [name, setName] = useState(\"\");\r\n    const [lang, setLang] = useState(\"\");\r\n    const [terms, setTerms] = useState(false);\r\n    const [status, setStatus] = useState(false)\r\n\r\n\r\n    function formSubmitted(e){\r\n        console.log(name,lang,terms);\r\n        setStatus(true);\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <>\r\n            <h1>Form Submission</h1>\r\n            <form onSubmit={formSubmitted}>\r\n            <input type=\"text\" placeholder=\"Enter Name\" onChange={(e)=> setName(e.target.value)}/> <br/><br/>\r\n            <select onChange={(e)=> setLang(e.target.value)}>\r\n                <option>Select Option</option>\r\n                <option>English</option>\r\n                <option>Sindhi</option>\r\n                <option>Urdu</option>\r\n            </select><br/><br/>\r\n            <input type=\"checkbox\" onChange={(e)=> setTerms(e.target.checked)}/><span>Terms & conditions</span><br/><br/>\r\n            <button type=\"submit\">Submit</button><br/><br/>\r\n           \r\n    </form>\r\n\r\n    {status ? <> \r\n            <h2>Output</h2>\r\n            <p>Name: {name}</p>\r\n            <p>Language: {lang}</p>\r\n            </> : \"\" }\r\n           \r\n        </>\r\n    )\r\n}\r\n*/\n\n// Conditional rendering | If Condition\n/*\r\nimport React from \"react\";\r\nimport Profile from \"./Components/Profile\";\r\n\r\nconst App=()=>{\r\n    return <Profile/>\r\n}\r\n\r\n*/\n\n// Basic Form validation\n/*\r\nimport React from \"react\";\r\nimport Login from \"./Components/Login\";\r\n\r\nconst App=()=>{\r\n    return <>\r\n    <Login/>\r\n    </>\r\n}\r\n*/\n\n// Challenge.... counter with increment, decrement and reset by using useState with previous state\n// With functional component\n/*\r\nimport React from \"react\";\r\nimport Counter from \"./Components/Counter\";\r\n\r\nconst App=()=>{\r\n    return <Counter/>\r\n}\r\n*/\n\n// With class component\n/*\r\nimport React from \"react\";\r\nimport ClassCounter from \"./Components/ClassCounter\";\r\n\r\nconst App=()=>{\r\n    return <ClassCounter/>\r\n}\r\n*/\n\n//challange... replace the array element with other\n/*\r\nimport React, { useState } from \"react\";\r\n\r\nconst App=()=>{\r\n  const [array, setArray] = useState([\"apple\",\" banana\",\" oranges\"]);\r\n\r\n  function replacElement(index, element){\r\n    setArray((prevValue)=>{\r\n        let newArray = [...prevValue]\r\n        newArray[index] = element\r\n        return newArray\r\n    })\r\n  }\r\n  \r\n    return <>\r\n    <h3>{array.map((fruit, index)=> <li id={index}>{fruit}</li>)}</h3> <br/>\r\n    <button onClick={()=> replacElement(0,\"mango\")}>Replace</button>\r\n   \r\n    </>\r\n}\r\n*/\n\n// Life cycle method used in react js\n// component is loaded (mounted)\n// When component is updated with state and props (updated)\n// when component is removed (Unmounted)\n// Question is when i remove the component then after reload life cycle start again or follow continued cycle. answer is it starts again from starting\n\n// 1) constructor life cycle method\n// This constructor life cycle method is used before the render method is called which contains html also so if we want something before render method then we use this constructor life cycle just like usestate which we define before render. in class component we define state in constructor b/c constructor automatically called after class.\n// We cant define api in constructor\n/* \r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"Vanita\"\r\n        }\r\n    }\r\n  render(){\r\n    return <h1>{this.state.name}</h1>\r\n  }\r\n}\r\n*/\n\n// 2) Render, life cycle method\n// Render method is called when\n// i. when component is created and called at start\n// ii. when states and props updated then\n/*\r\nimport React from \"react\";\r\nimport RenderCycle from \"./Components/RenderCycle\";\r\n\r\nconst App = ()=>{\r\n    return <RenderCycle email = \"vini@gmail.com\"/>\r\n}\r\n*/\n\n// 3) componentDidMount life cycle method\n// It is used when\n// i. all the html is completly loaded and now this method is called\n// ii. we call api in this method because api is called after loading of all the page\n// iii. this method is called when any thing is completely dependent on html so jese he html load hoge ye method call hojaega\n// it is called after the render method this method meaning sara component mount hojaega tab he ye method call hoga\n// jab component ko show ya hide karengy tab bhi ye use ho sakta a\n// ye method bs component ke load hone ke bad he chalta ha jab hum stats change karte tab render method dobara chalta ha per ye componentDidMount nahi chalta ye bas ek bar he chalta ha.tab he hum api ko es ke andr call karte hei kiyu k api srf ek bar he call ate ha after html/page reload.\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"Vanita\"\r\n        }\r\n        console.log(\"constructor\");\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\");\r\n    }\r\n    render(){\r\n        console.log(\"render\");\r\n        return (\r\n        <>\r\n        <h1>componentDidMount</h1>\r\n        <p>{this.state.name}</p>\r\n        <button onClick={()=>{this.setState({name:\"vini\"})}}>Update</button>\r\n        </>\r\n        )\r\n    }\r\n}\r\n*/\n\n// 4)  componentDidUpdate life cycle method\n// Ye method tab chalta ha jab stats ya props update hote hei\n// when i click on button then stat changes and this function called\n// es ke andr hum api call karwa sakte hei per jab conditionally call karwane ho tou otherwise nae kar sakte other componentDidMount mei karwayengy\n\n// With name\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"vini\"\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.name}</h1>\r\n                <button onClick={()=>{this.setState({name:\"chawla\"})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\n\n// also with counter\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count: this.state.count+1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\n\n// It also takes 3 parameter prevProps,prevState,snapshot\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState,snapshot){\r\n        console.log(prevState)\r\n        console.log(prevState.count, this.state.count)\r\n        if(prevState.count === this.state.count){\r\n            alert(\"same!\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count:1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n} \r\n*/\n\n// alse we can't update state without using any condition in this function. because it goes in infinite loop\n// Here in this example i use condition if it is less than 10 then loop works\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState,snapshot){\r\n        console.log(prevState)\r\n        console.log(prevState.count, this.state.count)\r\n        if(this.state.count < 10){\r\n            this.setState({\r\n                count:this.state.count+1\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count:1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n} \r\n*/\n\n// 5) shouldComponentUpdate life cycle method\n// Ye puchta ha k component ko update karna ha ya nae jese hum ne koe state change karwae to render method ya kise bhi life cycle method ko update karna ha ya nae ye hum condition mei bta sakte.\n// Hum specific condition deker stop karwa sakte k render method ab na update ho jese state 4 bar pe render update ho us ke bad nae\n// By default ye method component to update nae hone deta wo block kar deta ha jese hum click kar rhe state update console mei dikh rhe per output mei 0 he ha to jab hum return true karengy wo upadte hone dega. wo show es liye nahi hota kiyu k render method dobara chala he nae es ne update hone he nae dia.\n// Hum condition bhi laga sakte k srf  5 or 10 ke bech mei show ho render method update ho wese nahi ho\n// componentDidUpdate es ke bad call hota ha because ye decide karta tha render update hoga ya nae ek bar render update hwe to componentDidUpdate call hojaega.\n\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(){\r\n        console.log(\"shouldComponentUpdate\", this.state.count);\r\n        if(this.state.count >0 && this.state.count < 5){\r\n            return true;\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n  \r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>shouldComponentUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count: this.state.count+1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\n\n// componentWillUnmount life cycle method\n// Ye method tab call hoga jab koe component dom se delete hoga\n// Jab hum component ko hide karte tab hum ye method call karwate\n// Us ke liye hum yhan child component bnaengy k jab button pe click ho child component remove ho fir ye method call hojae\n/*\r\nimport React, { Component } from \"react\";\r\nimport OneComponent from \"./Components/OneComponent\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            show:true\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <h1>componentWillUnmount </h1>\r\n{\r\n    this.state.show ? <OneComponent/> : <h1> Child component removed!</h1>\r\n}\r\n            <button onClick={()=>{this.setState({show: !this.state.show})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\n\n// Hooks\n// we use hooks to use the class components features in functional component like state, lifecycle etc\n// useEffect hook\n// useeffect hook functional component mei ek life cycle ke tarah hota ha jese life cycle class component mei the.\n// ab useEffect call hota ha jab component bne or stats ya props update hon per hum es mei condition bhi laga sakte k agr humare pas 4 stats hei to ye srf ek state ke change hone pe chale ya kise bhi state ke change hone pe na chale bas jab component bne tab chale.\n// Usereffect apne ap mei function leta a and hum 1 se ziyada bhi useEffect bna sakte\n\n/*\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction App(){\r\n    const [count,setCount] = useState(\"vini\")\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect\")\r\n    })\r\n    return(\r\n        <>\r\n        <h1>UseEffect {count}</h1>\r\n        <button onClick={()=>setCount(\"vinita\")}>update</button>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Ab hum yhan dekhengy k hum specific state or prop pe useEffect ko kese call kar sakte hei\n/*\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropsEx from \"./Components/PropsEx\"\r\n\r\nconst App=()=>{\r\n    const [count,setCount] = useState(0);\r\n    const [data,setData] = useState(100);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect for data\")\r\n    },[data])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect for count\")\r\n    },[count])\r\n\r\n    return(\r\n        <>\r\n           <br/> <h1>UseEffect</h1> <br/>\r\n            <h3>Count :: {count}</h3> <br/>\r\n            <h3>Data :: {data}</h3><br/>\r\n            <PropsEx count={count} data={data}/> <br/>\r\n            <button onClick={()=> setCount(count+1)}>Update Count</button><br/>\r\n            <button onClick={()=> setData(data+1)}>Update Data</button>\r\n\r\n        </>\r\n    )\r\n}\r\n*/\n\n//  style in ReactJs (2 ways already done ... inline, external)\n// Another is modular css\n/*\r\nimport React from \"react\";\r\nimport style from \"./custom.module.css\"\r\nconst App=()=>{\r\n    return(\r\n        <>\r\n            <h1 className={style.success} style={{display:\"flex\",justifyContent:\"center\"}}>hello</h1>\r\n        </>\r\n    )\r\n}\r\n*/\n\n// Install Bootstrap\n/*\r\nimport React from \"react\";\r\nimport { Button,Alert } from \"react-bootstrap\";\r\nconst App= ()=>{\r\n    return(\r\n        <>\r\n            <div>\r\n                <h1>Bootstrap</h1>\r\n            <Button onClick={()=> alert(\"hi\")}>Click Me</Button> <br/>\r\n            <Alert variant='warning'>\r\n                  This is a alert—check it out!\r\n        </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n*/\n\n//  Array Listing with Map function (because react don't support for loop inside return but outside return it works well.)\n// And list with bootstrap table\n/*\r\nimport React from \"react\";\r\nimport {Table} from 'react-bootstrap';\r\n\r\nlet array = [\"vini\", \"vanita\", \"vinita\", \"kato\", \"tidi\"];\r\nlet obj = [\r\n  { name: \"Vanita\", email: \"vanita@gmail.com\", contact: \"000\" },\r\n  { name: \"Vinita\", email: \"vinita@gmail.com\", contact: \"111\" },\r\n  { name: \"Vini\", email: \"vini@gmail.com\", contact: \"222\" },\r\n  { name: \"Kato\", email: \"kato@gmail.com\", contact: \"333\" },\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Hello</h1>\r\n      {array.map((element) => {\r\n        return <h3>Name is : {element}</h3>;\r\n      })}\r\n      <Table striped bordered hover variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Contact</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {obj.map((element,index) => {\r\n          return (\r\n            <>\r\n              <tr key={index}>\r\n              <td>{index +1}</td>\r\n                <td>{element.name}</td>\r\n                <td>{element.email}</td>\r\n                <td>{element.contact}</td>\r\n              </tr>\r\n            </>\r\n          );\r\n        })}\r\n        \r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n*/\n\n// Nested List in ReactJs\n/*\r\nimport React from \"react\";\r\nimport {Table} from 'react-bootstrap';\r\nlet obj = [\r\n  { name: \"Vanita\", email: \"vanita@gmail.com\", contact: \"000\", address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ] },\r\n  { name: \"Vinita\", email: \"vinita@gmail.com\", contact: \"111\",address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ] },\r\n  { name: \"Vini\", email: \"vini@gmail.com\", contact: \"222\", address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ] },\r\n  { name: \"Kato\", email: \"kato@gmail.com\", contact: \"333\", address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ]  },\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Hello</h1>\r\n      \r\n      <Table striped bordered hover variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Contact</th>\r\n          <th>Address</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n      \r\n    {\r\n       obj.map((element,index)=>{\r\n       return(\r\n        <tr key={index}>\r\n         <td>{index+1}</td>\r\n          <td>{element.name}</td>\r\n          <td>{element.email}</td>\r\n          <td>{element.contact}</td>\r\n          <td>\r\n         <Table striped bordered hover variant=\"dark\">\r\n         <tbody>\r\n            {\r\n                element.address.map((item)=>{\r\n                   return(\r\n                    <tr>\r\n                    <td>{item.houseNo}</td>\r\n                  <td>{item.city}</td>\r\n                  <td>{item.country}</td>\r\n                    </tr>\r\n                   )\r\n                })\r\n            }\r\n            </tbody>\r\n            </Table>\r\n          </td>\r\n        </tr>\r\n       )\r\n       })\r\n    }\r\n        \r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n*/\n\n// Reuse component in loop\nimport React from \"react\";\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet obj = [{\n  name: \"Vanita\",\n  email: \"vanita@gmail.com\",\n  contact: \"000\"\n}, {\n  name: \"Vinita\",\n  email: \"vinita@gmail.com\",\n  contact: \"111\"\n}, {\n  name: \"Vini\",\n  email: \"vini@gmail.com\",\n  contact: \"222\"\n}, {\n  name: \"Kato\",\n  email: \"kato@gmail.com\",\n  contact: \"333\"\n}];\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","obj","name","email","contact","App","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","variant","_c","$RefreshReg$"],"sources":["D:/React Practice/my-app/src/App.jsx"],"sourcesContent":["//  React Functional Components\r\n/*\r\nimport React from \"react\";\r\nimport Heading from \"./Components/Heading\";\r\nimport {Para} from \"./Components/Para\";\r\nimport OrderedList from \"./Components/OrderedList\";\r\n\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <Heading/>\r\n        <Para/>\r\n         <OrderedList/>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// React class components\r\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Create class component within same file\r\n// To create the class component we use key word class, extends from component, and must use render() methid and then return\r\n/*\r\nimport React,{Component} from \"react\";\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n\r\nclass User extends Component{\r\n    render(){\r\n        return(\r\n            <h1> hello...</h1>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n// Component within component but we can use only that component not outside it and there are twe ways.\r\n/*\r\nimport React from \"react\";\r\nimport User from \"./Components/Classuser\";\r\nconst App = () =>{\r\n    function Other(){\r\n        return(\r\n            <><h1>Vanita Chawla</h1></>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        <User/>\r\n        <Other/>\r\n        {Other()}\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Can we write the code without jsx and just using js. yes :) , here is example of only one div\r\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,\"Hello this is my first div with out jsx\");\r\n    \r\n\r\n}\r\n*/\r\n\r\n// Now example of child inside div\r\n/*\r\nimport React from \"react\";\r\nconst App = () =>{\r\n\r\n    return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Hello this is my first div with out jsx\"));\r\n    \r\n\r\n}\r\n*/\r\n\r\n// Click event and function in ReactJs\r\n// Problem here is that if i click on button and my data variables changes but it shows first value not updated value why? here we use stats to change the state.\r\n// The reason why the data is not re-rendered onto the screen is because of functional components being stateless components. Stateless components cannot change their state during the runtime of the app, which means the components cannot be redrawn while the app is in action. If we console.log the data just after clicking the button by putting the {console.log(data)}, we will get the updated value of that data but we cannot see the updated value on the screen because the state is internally changed but the component did not render again due to its stateless nature.\r\n/*\r\nimport React from \"react\";\r\nfunction App(){\r\nlet data = \"Vanita chawla\"\r\n    function myfunc(){\r\n        data = \"Vini chawla\"\r\n        alert(\"function clicked!\")\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <h1>{data}</h1>\r\n        <button onClick={myfunc}>Click me</button>\r\n        <button onClick={()=> alert(\"hi\")}>click me</button>\r\n        <button onClick={()=> myfunc()}>click me</button>\r\n      </>\r\n    )\r\n}\r\n*/\r\n\r\n//  State with functional component\r\n// State is object in which we store the data\r\n// As in above example when we use variable then component not update with click.\r\n// We use state to update the component, when we click on btn state changes then component updated because it understand state is changed.\r\n// When we use state then it again re-render the the jsx part/functional component when state changes\r\n// Usestate is hook to update the state.\r\n/*\r\nimport React,{useState} from \"react\";\r\nconst App=()=>{\r\n    const [data,setData] = useState(\"Vanita\");\r\n    const [count, setCount] = useState(0)\r\n    function updateData(){\r\n        setData(\"Chawla\");\r\n        setCount(count + 1);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>{data}</h1>\r\n            <p>{count}</p>\r\n            <button onClick={updateData}>Click me</button>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// State with class component (we cannot use useState here)\r\n// to use the state in class component i make a app component with class component not functional\r\n// In class component we use state for this we have to follow these steps\r\n// i) create constructor\r\n// ii) call parent constructor for this we use super();\r\n// iii) create state by using this\r\n// To make the function no need to use function keyword and call this function by using arrow function and this variable (e.g. ()=> this.updateData())\r\n// To update the state we write like this e.g. this.setState({data:\"chawla\"})\r\n// To display the data we write this.state.data\r\n// We cannot use state outside the component\r\n// State is public\r\n\r\n// for name update\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:\"Vanita\"\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:\"chawla\"\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <p>0</p>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n// for counter\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            data:0\r\n        }\r\n    }\r\n\r\n    updateData(){\r\n        this.setState({\r\n            data:this.state.data + 1\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h1>{this.state.data}</h1>\r\n            <button onClick={()=> this.updateData()}>Click me</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n// Props with functional component\r\n// props arelike parameter we create component and send data to that component with helps of props or we can say send props to that component\r\n// We can only update the state here means in parent component not in child component (Student)\r\n// pass functions and html also\r\n/*\r\nimport React, { useState } from \"react\";\r\nimport Student from \"./Components/Student\";\r\n\r\nconst App=()=>{\r\n\r\n    let heading={\r\n        display:\"flex\",\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        gap:\"1rem\",\r\n        marginTop:\"1rem\"\r\n    }\r\n\r\n    const [name,setName] = useState(\"Vinita Chawla\");\r\n\r\n\r\n    function Apple(){\r\n        alert(\"Hello\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div style={heading}>\r\n            <h1>React props</h1>\r\n            <Student name={name} email={\"vini@gmail.com\"} func={Apple} other={{address:\"Ghotki\", role:\"Student\"}}\r\n                html= {<h1>This is HTML heading</h1>}\r\n            />\r\n        <button onClick={()=> setName(\"Vanita Chawla\")}>Update name</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Props in class component (Both ways 1-change state directly  2- change with function)\r\n/*\r\nimport React, { Component} from \"react\";\r\nimport ClassStudent from \"./Components/ClassStudent\";\r\n\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name:\"Vanita Chawla\"\r\n        }\r\n    }\r\n \r\n    updateName(){\r\n        this.setState({name:\"Vini\"})\r\n    }\r\n\r\n    render(){\r\n        let heading={\r\n            display:\"flex\",\r\n            flexDirection : \"column\",\r\n            justifyContent : \"center\",\r\n            alignItems : \"center\",\r\n            gap:\"1rem\",\r\n            marginTop:\"1rem\"\r\n        }\r\n    \r\n        \r\n        return(\r\n            <>\r\n            <div style={heading}>\r\n                <h1>React props</h1>\r\n                <ClassStudent name={this.state.name} email=\"vini@gmail.com\"/>\r\n                <button onClick={()=> this.setState({name:\"vinita\"})}>Update name1</button>\r\n                <button onClick={()=> this.updateName()}>Update name2</button> \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\r\n\r\n// Get Input box value by changing the input or click on btn and then get value\r\n// One method\r\n/*\r\nimport React, { useState } from \"react\";\r\nconst App = ()=>{\r\n    const [data,setData] = useState(null);\r\n    const [value ,setValue] = useState(null);\r\n\r\n    function getValue(val){\r\n        console.log(val.target.value);\r\n        setData(val.target.value)\r\n    }\r\n\r\n    function btnClicked(){\r\n        alert(\"clicked\")\r\n        setValue(data);\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>Input Box value</h1>\r\n            <h1>With input change: {data}</h1>\r\n            <h1>With button click: {value}</h1>\r\n            <input type=\"text\" onChange={getValue}/>\r\n            <button onClick={btnClicked}>click me</button>\r\n\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Other method\r\n// When typing hide value by writing this statemenet setValue(false);\r\n/*\r\nimport React, { useState } from \"react\";\r\nconst App = ()=>{\r\n    const [data,setData] = useState(null);\r\n    const [value ,setValue] = useState(false);\r\n\r\n    function getValue(val){\r\n        console.log(val.target.value);\r\n        setData(val.target.value);\r\n        setValue(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>Input Box value</h1>\r\n            {value ? <h1>{data}</h1> : null}\r\n            <input type=\"text\" onChange={getValue}/>\r\n            <button onClick={()=>setValue(true)}>click me</button>\r\n\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Hide , Show and Toggle in ReactJs\r\n/*\r\nimport React, { useState } from \"react\";\r\nconst App = ()=>{\r\n    const [status, setStatus] = useState(true)\r\n    return(\r\n        <>\r\n           {status ? <h1>Hello Vanita!</h1> : null} \r\n            <button onClick={()=> setStatus(false)}>Hide</button>\r\n            <button onClick={()=> setStatus(true)}>Show</button>\r\n            <button onClick={()=> setStatus(!status)}>toggle</button>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Handle Form | checkbox | input field | select\r\n/*\r\nimport React, { useState } from \"react\";\r\n\r\nconst App=()=>{\r\n    const [name, setName] = useState(\"\");\r\n    const [lang, setLang] = useState(\"\");\r\n    const [terms, setTerms] = useState(false);\r\n    const [status, setStatus] = useState(false)\r\n\r\n\r\n    function formSubmitted(e){\r\n        console.log(name,lang,terms);\r\n        setStatus(true);\r\n        e.preventDefault();\r\n    }\r\n    return(\r\n        <>\r\n            <h1>Form Submission</h1>\r\n            <form onSubmit={formSubmitted}>\r\n            <input type=\"text\" placeholder=\"Enter Name\" onChange={(e)=> setName(e.target.value)}/> <br/><br/>\r\n            <select onChange={(e)=> setLang(e.target.value)}>\r\n                <option>Select Option</option>\r\n                <option>English</option>\r\n                <option>Sindhi</option>\r\n                <option>Urdu</option>\r\n            </select><br/><br/>\r\n            <input type=\"checkbox\" onChange={(e)=> setTerms(e.target.checked)}/><span>Terms & conditions</span><br/><br/>\r\n            <button type=\"submit\">Submit</button><br/><br/>\r\n           \r\n    </form>\r\n\r\n    {status ? <> \r\n            <h2>Output</h2>\r\n            <p>Name: {name}</p>\r\n            <p>Language: {lang}</p>\r\n            </> : \"\" }\r\n           \r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Conditional rendering | If Condition\r\n/*\r\nimport React from \"react\";\r\nimport Profile from \"./Components/Profile\";\r\n\r\nconst App=()=>{\r\n    return <Profile/>\r\n}\r\n\r\n*/\r\n\r\n// Basic Form validation\r\n/*\r\nimport React from \"react\";\r\nimport Login from \"./Components/Login\";\r\n\r\nconst App=()=>{\r\n    return <>\r\n    <Login/>\r\n    </>\r\n}\r\n*/\r\n\r\n// Challenge.... counter with increment, decrement and reset by using useState with previous state\r\n// With functional component\r\n/*\r\nimport React from \"react\";\r\nimport Counter from \"./Components/Counter\";\r\n\r\nconst App=()=>{\r\n    return <Counter/>\r\n}\r\n*/\r\n\r\n// With class component\r\n/*\r\nimport React from \"react\";\r\nimport ClassCounter from \"./Components/ClassCounter\";\r\n\r\nconst App=()=>{\r\n    return <ClassCounter/>\r\n}\r\n*/\r\n\r\n//challange... replace the array element with other\r\n/*\r\nimport React, { useState } from \"react\";\r\n\r\nconst App=()=>{\r\n  const [array, setArray] = useState([\"apple\",\" banana\",\" oranges\"]);\r\n\r\n  function replacElement(index, element){\r\n    setArray((prevValue)=>{\r\n        let newArray = [...prevValue]\r\n        newArray[index] = element\r\n        return newArray\r\n    })\r\n  }\r\n  \r\n    return <>\r\n    <h3>{array.map((fruit, index)=> <li id={index}>{fruit}</li>)}</h3> <br/>\r\n    <button onClick={()=> replacElement(0,\"mango\")}>Replace</button>\r\n   \r\n    </>\r\n}\r\n*/\r\n\r\n// Life cycle method used in react js\r\n// component is loaded (mounted)\r\n// When component is updated with state and props (updated)\r\n// when component is removed (Unmounted)\r\n// Question is when i remove the component then after reload life cycle start again or follow continued cycle. answer is it starts again from starting\r\n\r\n// 1) constructor life cycle method\r\n// This constructor life cycle method is used before the render method is called which contains html also so if we want something before render method then we use this constructor life cycle just like usestate which we define before render. in class component we define state in constructor b/c constructor automatically called after class.\r\n// We cant define api in constructor\r\n/* \r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"Vanita\"\r\n        }\r\n    }\r\n  render(){\r\n    return <h1>{this.state.name}</h1>\r\n  }\r\n}\r\n*/\r\n\r\n// 2) Render, life cycle method\r\n// Render method is called when\r\n// i. when component is created and called at start\r\n// ii. when states and props updated then\r\n/*\r\nimport React from \"react\";\r\nimport RenderCycle from \"./Components/RenderCycle\";\r\n\r\nconst App = ()=>{\r\n    return <RenderCycle email = \"vini@gmail.com\"/>\r\n}\r\n*/\r\n\r\n// 3) componentDidMount life cycle method\r\n// It is used when\r\n// i. all the html is completly loaded and now this method is called\r\n// ii. we call api in this method because api is called after loading of all the page\r\n// iii. this method is called when any thing is completely dependent on html so jese he html load hoge ye method call hojaega\r\n// it is called after the render method this method meaning sara component mount hojaega tab he ye method call hoga\r\n// jab component ko show ya hide karengy tab bhi ye use ho sakta a\r\n// ye method bs component ke load hone ke bad he chalta ha jab hum stats change karte tab render method dobara chalta ha per ye componentDidMount nahi chalta ye bas ek bar he chalta ha.tab he hum api ko es ke andr call karte hei kiyu k api srf ek bar he call ate ha after html/page reload.\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"Vanita\"\r\n        }\r\n        console.log(\"constructor\");\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\");\r\n    }\r\n    render(){\r\n        console.log(\"render\");\r\n        return (\r\n        <>\r\n        <h1>componentDidMount</h1>\r\n        <p>{this.state.name}</p>\r\n        <button onClick={()=>{this.setState({name:\"vini\"})}}>Update</button>\r\n        </>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\n// 4)  componentDidUpdate life cycle method\r\n// Ye method tab chalta ha jab stats ya props update hote hei\r\n// when i click on button then stat changes and this function called\r\n// es ke andr hum api call karwa sakte hei per jab conditionally call karwane ho tou otherwise nae kar sakte other componentDidMount mei karwayengy\r\n\r\n// With name\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"vini\"\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.name}</h1>\r\n                <button onClick={()=>{this.setState({name:\"chawla\"})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\r\n\r\n// also with counter\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count: this.state.count+1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\r\n\r\n// It also takes 3 parameter prevProps,prevState,snapshot\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState,snapshot){\r\n        console.log(prevState)\r\n        console.log(prevState.count, this.state.count)\r\n        if(prevState.count === this.state.count){\r\n            alert(\"same!\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count:1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n} \r\n*/\r\n\r\n// alse we can't update state without using any condition in this function. because it goes in infinite loop\r\n// Here in this example i use condition if it is less than 10 then loop works\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState,snapshot){\r\n        console.log(prevState)\r\n        console.log(prevState.count, this.state.count)\r\n        if(this.state.count < 10){\r\n            this.setState({\r\n                count:this.state.count+1\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>componentDidUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count:1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n} \r\n*/\r\n\r\n// 5) shouldComponentUpdate life cycle method\r\n// Ye puchta ha k component ko update karna ha ya nae jese hum ne koe state change karwae to render method ya kise bhi life cycle method ko update karna ha ya nae ye hum condition mei bta sakte.\r\n// Hum specific condition deker stop karwa sakte k render method ab na update ho jese state 4 bar pe render update ho us ke bad nae\r\n// By default ye method component to update nae hone deta wo block kar deta ha jese hum click kar rhe state update console mei dikh rhe per output mei 0 he ha to jab hum return true karengy wo upadte hone dega. wo show es liye nahi hota kiyu k render method dobara chala he nae es ne update hone he nae dia.\r\n// Hum condition bhi laga sakte k srf  5 or 10 ke bech mei show ho render method update ho wese nahi ho\r\n// componentDidUpdate es ke bad call hota ha because ye decide karta tha render update hoga ya nae ek bar render update hwe to componentDidUpdate call hojaega.\r\n\r\n/*\r\nimport React, { Component } from \"react\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n\r\n        console.log(\"constructor\")\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(){\r\n        console.log(\"shouldComponentUpdate\", this.state.count);\r\n        if(this.state.count >0 && this.state.count < 5){\r\n            return true;\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n  \r\n\r\n    render(){\r\n        console.log(\"render\")\r\n\r\n        return(\r\n            <>\r\n                <h1>shouldComponentUpdate {this.state.count}</h1>\r\n                <button onClick={()=>{this.setState({count: this.state.count+1})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\r\n\r\n// componentWillUnmount life cycle method\r\n// Ye method tab call hoga jab koe component dom se delete hoga\r\n// Jab hum component ko hide karte tab hum ye method call karwate\r\n// Us ke liye hum yhan child component bnaengy k jab button pe click ho child component remove ho fir ye method call hojae\r\n/*\r\nimport React, { Component } from \"react\";\r\nimport OneComponent from \"./Components/OneComponent\";\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            show:true\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <h1>componentWillUnmount </h1>\r\n{\r\n    this.state.show ? <OneComponent/> : <h1> Child component removed!</h1>\r\n}\r\n            <button onClick={()=>{this.setState({show: !this.state.show})}}>Update</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n*/\r\n\r\n// Hooks\r\n// we use hooks to use the class components features in functional component like state, lifecycle etc\r\n// useEffect hook\r\n// useeffect hook functional component mei ek life cycle ke tarah hota ha jese life cycle class component mei the.\r\n// ab useEffect call hota ha jab component bne or stats ya props update hon per hum es mei condition bhi laga sakte k agr humare pas 4 stats hei to ye srf ek state ke change hone pe chale ya kise bhi state ke change hone pe na chale bas jab component bne tab chale.\r\n// Usereffect apne ap mei function leta a and hum 1 se ziyada bhi useEffect bna sakte\r\n\r\n/*\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction App(){\r\n    const [count,setCount] = useState(\"vini\")\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect\")\r\n    })\r\n    return(\r\n        <>\r\n        <h1>UseEffect {count}</h1>\r\n        <button onClick={()=>setCount(\"vinita\")}>update</button>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Ab hum yhan dekhengy k hum specific state or prop pe useEffect ko kese call kar sakte hei\r\n/*\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropsEx from \"./Components/PropsEx\"\r\n\r\nconst App=()=>{\r\n    const [count,setCount] = useState(0);\r\n    const [data,setData] = useState(100);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect for data\")\r\n    },[data])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect for count\")\r\n    },[count])\r\n\r\n    return(\r\n        <>\r\n           <br/> <h1>UseEffect</h1> <br/>\r\n            <h3>Count :: {count}</h3> <br/>\r\n            <h3>Data :: {data}</h3><br/>\r\n            <PropsEx count={count} data={data}/> <br/>\r\n            <button onClick={()=> setCount(count+1)}>Update Count</button><br/>\r\n            <button onClick={()=> setData(data+1)}>Update Data</button>\r\n\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n//  style in ReactJs (2 ways already done ... inline, external)\r\n// Another is modular css\r\n/*\r\nimport React from \"react\";\r\nimport style from \"./custom.module.css\"\r\nconst App=()=>{\r\n    return(\r\n        <>\r\n            <h1 className={style.success} style={{display:\"flex\",justifyContent:\"center\"}}>hello</h1>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n// Install Bootstrap\r\n/*\r\nimport React from \"react\";\r\nimport { Button,Alert } from \"react-bootstrap\";\r\nconst App= ()=>{\r\n    return(\r\n        <>\r\n            <div>\r\n                <h1>Bootstrap</h1>\r\n            <Button onClick={()=> alert(\"hi\")}>Click Me</Button> <br/>\r\n            <Alert variant='warning'>\r\n                  This is a alert—check it out!\r\n        </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n//  Array Listing with Map function (because react don't support for loop inside return but outside return it works well.)\r\n// And list with bootstrap table\r\n/*\r\nimport React from \"react\";\r\nimport {Table} from 'react-bootstrap';\r\n\r\nlet array = [\"vini\", \"vanita\", \"vinita\", \"kato\", \"tidi\"];\r\nlet obj = [\r\n  { name: \"Vanita\", email: \"vanita@gmail.com\", contact: \"000\" },\r\n  { name: \"Vinita\", email: \"vinita@gmail.com\", contact: \"111\" },\r\n  { name: \"Vini\", email: \"vini@gmail.com\", contact: \"222\" },\r\n  { name: \"Kato\", email: \"kato@gmail.com\", contact: \"333\" },\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Hello</h1>\r\n      {array.map((element) => {\r\n        return <h3>Name is : {element}</h3>;\r\n      })}\r\n      <Table striped bordered hover variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Contact</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {obj.map((element,index) => {\r\n          return (\r\n            <>\r\n              <tr key={index}>\r\n              <td>{index +1}</td>\r\n                <td>{element.name}</td>\r\n                <td>{element.email}</td>\r\n                <td>{element.contact}</td>\r\n              </tr>\r\n            </>\r\n          );\r\n        })}\r\n        \r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n*/\r\n\r\n// Nested List in ReactJs\r\n/*\r\nimport React from \"react\";\r\nimport {Table} from 'react-bootstrap';\r\nlet obj = [\r\n  { name: \"Vanita\", email: \"vanita@gmail.com\", contact: \"000\", address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ] },\r\n  { name: \"Vinita\", email: \"vinita@gmail.com\", contact: \"111\",address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ] },\r\n  { name: \"Vini\", email: \"vini@gmail.com\", contact: \"222\", address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ] },\r\n  { name: \"Kato\", email: \"kato@gmail.com\", contact: \"333\", address:[\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n    {houseNo : 5,city: \"Ghotki\",country : \"Pakistan\"},\r\n  ]  },\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Hello</h1>\r\n      \r\n      <Table striped bordered hover variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Contact</th>\r\n          <th>Address</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n      \r\n    {\r\n       obj.map((element,index)=>{\r\n       return(\r\n        <tr key={index}>\r\n         <td>{index+1}</td>\r\n          <td>{element.name}</td>\r\n          <td>{element.email}</td>\r\n          <td>{element.contact}</td>\r\n          <td>\r\n         <Table striped bordered hover variant=\"dark\">\r\n         <tbody>\r\n            {\r\n                element.address.map((item)=>{\r\n                   return(\r\n                    <tr>\r\n                    <td>{item.houseNo}</td>\r\n                  <td>{item.city}</td>\r\n                  <td>{item.country}</td>\r\n                    </tr>\r\n                   )\r\n                })\r\n            }\r\n            </tbody>\r\n            </Table>\r\n          </td>\r\n        </tr>\r\n       )\r\n       })\r\n    }\r\n        \r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n*/\r\n\r\n// Reuse component in loop\r\nimport React from \"react\";\r\nimport {Table} from 'react-bootstrap';\r\nlet obj = [\r\n  { name: \"Vanita\", email: \"vanita@gmail.com\", contact: \"000\"},\r\n  { name: \"Vinita\", email: \"vinita@gmail.com\", contact: \"111\"},\r\n  { name: \"Vini\", email: \"vini@gmail.com\", contact: \"222\" },\r\n  { name: \"Kato\", email: \"kato@gmail.com\", contact: \"333\" },\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Hello</h1>\r\n      \r\n      <Table striped bordered hover variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Contact</th>\r\n          <th>Address</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n      \r\n    \r\n        \r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappingszB,SAAQC,KAAK,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACtC,IAAIC,GAAG,GAAG,CACR;EAAEC,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,OAAO,EAAE;AAAK,CAAC,EAC5D;EAAEF,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,OAAO,EAAE;AAAK,CAAC,EAC5D;EAAEF,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,OAAO,EAAE;AAAM,CAAC,EACzD;EAAEF,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,OAAO,EAAE;AAAM,CAAC,CAC1D;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEdZ,OAAA,CAACF,KAAK;MAACe,OAAO;MAACC,QAAQ;MAACC,KAAK;MAACC,OAAO,EAAC,MAAM;MAAAR,QAAA,gBAC5CR,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAAQ,QAAA,gBACAR,OAAA;YAAAQ,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACTZ,OAAA;YAAAQ,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbZ,OAAA;YAAAQ,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdZ,OAAA;YAAAQ,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBZ,OAAA;YAAAQ,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRZ,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACR,CAAC;AAEP,CAAC;AAACK,EAAA,GAvBIV,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}