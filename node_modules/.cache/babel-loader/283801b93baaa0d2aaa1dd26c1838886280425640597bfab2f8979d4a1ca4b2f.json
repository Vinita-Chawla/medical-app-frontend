{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Practice\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n// With pure js\n/*\nlet h1 = document.createElement(\"div\");\nh1.innerHTML=\"<h1>Vanita Chawla</h1>\";\ndocument.getElementById(\"root\").appendChild(h1);\n*/\n\n// JSX in react js\n/*\nReactDOM.render(<h1>Hello World!</h1>,document.getElementById(\"root\"));\n*/\n\n// Render Multiple jsx elements using div\n/*\nReactDOM.render(\n    <div>\n<h1>Vanita Chawla</h1>\n<h3>Front end developer</h3>\n</div>\n,document.getElementById(\"root\"));\n*/\n\n// Render Multiple jsx elements by returning an array\n/*\nReactDOM.render(\n   [\n<h1>Vanita Chawla</h1>,\n<h3>Front-end developer</h3>\n]\n,document.getElementById(\"root\"));\n*/\n\n// Render Multiple jsx elements by using react fragement synthetic sugar form means react fragement shortcut\n/*\nReactDOM.render(\n    <>\n <h1>Vanita Chawla</h1>\n <h3>Front-end Developer</h3>\n </>\n ,document.getElementById(\"root\"));\n*/\n\n// Render Multiple jsx elements by using react fragement \n/*\nReactDOM.render(\n    <React.Fragment>\n <h1>Vanita Chawla</h1>\n <h3>Front-end Developer</h3>\n </React.Fragment>\n ,document.getElementById(\"root\"));\n */\n\n//  task #1\n/*\nReactDOM.render(\n    <>\n        <h1>Vanita Chawla Fav series</h1>\n        <p>React.js First Task</p>\n        <ol>\n            <li>None</li>\n            <li>None</li>\n            <li>None</li>\n            <li>None</li>\n        </ol>\n    </>\n    ,document.getElementById(\"root\"))\n    */\n\n// ES6 Template Literals in JSX in ReactJS \n/*\nconst fName = \"Vanita\";\nconst Lname = \"Chawla\";\nReactDOM.render(\n   <p>{`My first name is ${fName} and last name is ${Lname}`}</p>\n    ,document.getElementById(\"root\"))\n*/\n\n// React JS Challenge #2: Display Current Date and Time in JSX in React JS\n/*\nconst date = new Date();\n\nReactDOM.render(\n    <>\n        <h1>Hello, My name is Vanita Chawla!</h1>\n        <p>{`Today Date is ${date.toLocaleDateString()}`}</p>\n        <p>{`Today Time is ${date.toLocaleTimeString()}`} </p>\n       \n    </>\n    ,document.getElementById(\"root\"))\n*/\n\n// JSX Attributes in ReactJS and CSS Styling & Importing CSS Files in React JS | Class Vs ClassName in React JS \n/*\nconst img1 = \"https://picsum.photos/200/300\"\nconst img2 = \"https://picsum.photos/250/300\"\nconst img3 = \"https://picsum.photos/300/300\"\nconst link = \"https://google.com\"\n\nReactDOM.render(\n    <>\n        <h1 contentEditable=\"true\" className=\"heading\">Image Gallery</h1>\n        <div className=\"imgDiv\">\n    <img src={img1} alt=\"Image\"/>\n    <img src={img3} alt=\"Image\"/>\n        <a href={link} >\n        <img src={img2} alt=\"Image\"/>\n        </a>\n        </div>\n    </>\n    ,document.getElementById(\"root\"))\n\n*/\n\n// Internal CSS & Inline CSS Styling In React JS (one way)\n/*\nReactDOM.render(\n    <>\n        <h1 style={{color:\"brown\",textAlign:\"center\",marginTop: \"2rem\",}}>Image Gallery</h1>\n    </>\n    ,document.getElementById(\"root\"))\n*/\n\n// Internal CSS & Inline CSS Styling In React JS (one way)\n/*\nconst heading = {\n    color:\"brown\",\n    textAlign:\"center\",\n    marginTop:\"2rem\",\n    textTransform:\"uppercase\",\n    fontWeight: \"bold\"\n}\nReactDOM.render(\n    <>\n        <h1 style={heading}>Image gallery</h1>\n    </>\n    ,document.getElementById(\"root\"))\n*/\n\n// Challenge #3\n/*\nlet hours = new Date().getHours();\nlet greetings;\nlet givencolor;\nif(hours>1 && hours<11){\n    greetings = \"Good Morning\";\n    givencolor=\"green\";\n}\nelse if(hours >12 && hours<19){\n    greetings = \"Good Afternoon\"\n    givencolor=\"orange\";\n}\nelse{\n    greetings = \"Good Night\"\n    givencolor=\"black\";\n}\nconsole.log(hours)\nReactDOM.render(\n    <>\n    <div className=\"mainDiv\">\n    <h1>Hello Sir, <span style={{color: givencolor}}>{greetings}</span></h1>\n    </div>\n    </>\n    ,document.getElementById(\"root\"));\n\n*/\n\n// React Components in Hindi \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Vanita Chawla Fav series\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"React.js First Task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this)]\n}, void 0, true), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","render","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["D:/React Practice/my-app/src/index.js"],"sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\";\n\n// With pure js\n/*\nlet h1 = document.createElement(\"div\");\nh1.innerHTML=\"<h1>Vanita Chawla</h1>\";\ndocument.getElementById(\"root\").appendChild(h1);\n*/\n\n// JSX in react js\n/*\nReactDOM.render(<h1>Hello World!</h1>,document.getElementById(\"root\"));\n*/\n\n// Render Multiple jsx elements using div\n/*\nReactDOM.render(\n    <div>\n<h1>Vanita Chawla</h1>\n<h3>Front end developer</h3>\n</div>\n,document.getElementById(\"root\"));\n*/\n\n// Render Multiple jsx elements by returning an array\n/*\nReactDOM.render(\n   [\n<h1>Vanita Chawla</h1>,\n<h3>Front-end developer</h3>\n]\n,document.getElementById(\"root\"));\n*/\n\n\n// Render Multiple jsx elements by using react fragement synthetic sugar form means react fragement shortcut\n/*\nReactDOM.render(\n    <>\n <h1>Vanita Chawla</h1>\n <h3>Front-end Developer</h3>\n </>\n ,document.getElementById(\"root\"));\n*/\n \n// Render Multiple jsx elements by using react fragement \n/*\nReactDOM.render(\n    <React.Fragment>\n <h1>Vanita Chawla</h1>\n <h3>Front-end Developer</h3>\n </React.Fragment>\n ,document.getElementById(\"root\"));\n */\n\n\n//  task #1\n/*\nReactDOM.render(\n    <>\n        <h1>Vanita Chawla Fav series</h1>\n        <p>React.js First Task</p>\n        <ol>\n            <li>None</li>\n            <li>None</li>\n            <li>None</li>\n            <li>None</li>\n        </ol>\n    </>\n    ,document.getElementById(\"root\"))\n    */\n\n\n// ES6 Template Literals in JSX in ReactJS \n/*\nconst fName = \"Vanita\";\nconst Lname = \"Chawla\";\nReactDOM.render(\n   <p>{`My first name is ${fName} and last name is ${Lname}`}</p>\n    ,document.getElementById(\"root\"))\n*/\n\n// React JS Challenge #2: Display Current Date and Time in JSX in React JS\n/*\nconst date = new Date();\n\nReactDOM.render(\n    <>\n        <h1>Hello, My name is Vanita Chawla!</h1>\n        <p>{`Today Date is ${date.toLocaleDateString()}`}</p>\n        <p>{`Today Time is ${date.toLocaleTimeString()}`} </p>\n       \n    </>\n    ,document.getElementById(\"root\"))\n*/\n\n\n// JSX Attributes in ReactJS and CSS Styling & Importing CSS Files in React JS | Class Vs ClassName in React JS \n/*\nconst img1 = \"https://picsum.photos/200/300\"\nconst img2 = \"https://picsum.photos/250/300\"\nconst img3 = \"https://picsum.photos/300/300\"\nconst link = \"https://google.com\"\n\nReactDOM.render(\n    <>\n        <h1 contentEditable=\"true\" className=\"heading\">Image Gallery</h1>\n        <div className=\"imgDiv\">\n    <img src={img1} alt=\"Image\"/>\n    <img src={img3} alt=\"Image\"/>\n        <a href={link} >\n        <img src={img2} alt=\"Image\"/>\n        </a>\n        </div>\n    </>\n    ,document.getElementById(\"root\"))\n\n*/\n\n// Internal CSS & Inline CSS Styling In React JS (one way)\n/*\nReactDOM.render(\n    <>\n        <h1 style={{color:\"brown\",textAlign:\"center\",marginTop: \"2rem\",}}>Image Gallery</h1>\n    </>\n    ,document.getElementById(\"root\"))\n*/\n\n\n// Internal CSS & Inline CSS Styling In React JS (one way)\n/*\nconst heading = {\n    color:\"brown\",\n    textAlign:\"center\",\n    marginTop:\"2rem\",\n    textTransform:\"uppercase\",\n    fontWeight: \"bold\"\n}\nReactDOM.render(\n    <>\n        <h1 style={heading}>Image gallery</h1>\n    </>\n    ,document.getElementById(\"root\"))\n*/\n\n// Challenge #3\n/*\nlet hours = new Date().getHours();\nlet greetings;\nlet givencolor;\nif(hours>1 && hours<11){\n    greetings = \"Good Morning\";\n    givencolor=\"green\";\n}\nelse if(hours >12 && hours<19){\n    greetings = \"Good Afternoon\"\n    givencolor=\"orange\";\n}\nelse{\n    greetings = \"Good Night\"\n    givencolor=\"black\";\n}\nconsole.log(hours)\nReactDOM.render(\n    <>\n    <div className=\"mainDiv\">\n    <h1>Hello Sir, <span style={{color: givencolor}}>{greetings}</span></h1>\n    </div>\n    </>\n    ,document.getElementById(\"root\"));\n\n*/\n\n// React Components in Hindi \n\nReactDOM.render(\n    <>\n        <h1>Vanita Chawla Fav series</h1>\n        <p>React.js First Task</p>\n        <ol>\n            <li>None</li>\n            <li>None</li>\n            <li>None</li>\n            <li>None</li>\n        </ol>\n    </>\n    ,document.getElementById(\"root\"))"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;;AAEpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEAJ,QAAQ,CAACK,MAAM,eACXH,OAAA,CAAAE,SAAA;EAAAE,QAAA,gBACIJ,OAAA;IAAAI,QAAA,EAAI;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACjCR,OAAA;IAAAI,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eAC1BR,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbR,OAAA;MAAAI,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbR,OAAA;MAAAI,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbR,OAAA;MAAAI,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAAA,eACP,CAAC,EACFC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}